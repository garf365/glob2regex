[tox]
envlist = 
    py37
    py38
    py39
    py310
    py311
    py312
isolated_build = True
skip_missing_interpreters = true

[bandit]
exclude = .tox,build,dist,tests,.venv*

[flake8]
exclude = .tox,build,dist,glob2regex.egg-info,.venv*,docs
max-line-length = 88

[isort]
profile = black
multi_line_output = 3
force_single_line = True

[pylint]
[MASTER]
persistent = yes
suggestion-mode = yes
unsafe-load-any-extension = no
load-plugins = pylint_pytest
[REPORTS]
output-format = parseable
score = yes
msg-template = {path}:{module}:{line}: [{msg_id}({symbol}), {obj}] {msg}
[REFACTORING]
max-nested-blocks = 5
never-returning-functions = sys.exit
[SIMILARITIES]
ignore-comments = yes
ignore-docstrings = yes
ignore-imports = yes
min-similarity-lines = 3
[TYPECHECK]
generated-members = db.session.*
[MESSAGE CONTROL]
disable = pointless-statement,consider-using-f-string

[pytest]
addopts =
    --color=yes
    --verbose

[testenv]
description = Unit tests
deps =
  -e .
  coverage>=5.5
  mock>=4.0.3
  pytest>=6.2.3
commands = 
    coverage run --source=glob2regex -m pytest -W ignore::DeprecationWarning --basetemp="{envtmpdir}" {posargs: tests} --junit-prefix="{envname}" --junitxml="build/{envname}-output.xml"
    coverage xml -o "build/{envname}-coverage.xml"

[testenv:securitylint]
description = PyCQA security linter
deps = 
    bandit
commands = bandit -f custom -o build/bandit.out --msg-template "\{abspath\}:\{line\}: \{severity\}: \{test_id\}: \{msg\}" --ini tox.ini {posargs:-r glob2regex setup.py}

[testenv:clean]
description = Clean up bytecode and build artifacts
deps = pyclean
commands = 
    pyclean {toxinidir}
    rm -rf .tox/ build/ dist/ glob2regex.egg-info/ .pytest_cache/ pytestdebug.log buildoutput.xml buildcoverage.xml
whitelist_externals =
    rm

[testenv:staticanalysis]
description = Static code analysis and code style
deps = 
    flake8
commands = flake8 --format=pylint --output-file=build/flake8.txt --tee {posargs}

[testenv:lint]
description = Check for errors and code smells
deps = 
    pylint<2.14
    pylint-pytest
commands = pylint --output=buildpylint.txt --rcfile tox.ini {posargs: glob2regex setup} --exit-zero

[testenv:format]
description = Automatic formatting code
deps =
    autoflake
    isort[requirements_deprecated_finder]>=5.8.0
    black>=23
commands = 
    autoflake -i -r --remove-all-unused-imports --remove-duplicate-keys --remove-unused-variables glob2regex tests
    isort glob2regex tests
    black glob2regex tests

[testenv:doc]
description = Automatic documentation
deps =
    -e .
    sphinx
    sphinx-rtd-theme
commands = sphinx-build -M html "doc" "build" {posargs} 
